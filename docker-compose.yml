version: "3.8"

services:
  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  services:
    build:
      context: ./service
      dockerfile: Dockerfile
    depends_on:
      - kafka
    env_file:
      - stack.env

  postgresql:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: bradial
      POSTGRES_USER: root
      POSTGRES_PASSWORD: pass
    volumes:
      - ./database:/var/lib/postgresql/data

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgresql
    env_file:
      - stack.env
    ports:
      - "3000:3000"

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    depends_on:
      - api
    env_file:
      - stack.env
    ports:
      - "1000:3000"
